//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""81471277-aa53-4dc9-9b9f-533dc99973e2"",
            ""actions"": [
                {
                    ""name"": ""MainClick"",
                    ""type"": ""Button"",
                    ""id"": ""4e42060e-7aca-45ca-87c3-341fd822176f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryTouch"",
                    ""type"": ""Button"",
                    ""id"": ""6326394e-c530-4c83-b88e-bc55bb3eaec3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondTouch"",
                    ""type"": ""Button"",
                    ""id"": ""f37f3348-ff40-473e-848c-7603e0c89210"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""19ce440c-b2b5-4621-a524-27a084c197f8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryTouchPos"",
                    ""type"": ""Value"",
                    ""id"": ""30ac845d-6a69-403a-b53e-02bb87e1359a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondTouchPos"",
                    ""type"": ""Value"",
                    ""id"": ""05403d87-5578-4422-92ac-edf7c8bcf75e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryTouchDelta"",
                    ""type"": ""Value"",
                    ""id"": ""37bf7948-0bbb-4860-be0b-c172a865246a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f48b389b-422d-4bd7-a76a-569cf2f9cac3"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""MainClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34b5b6c6-29a4-425e-9940-05a8f8a1bc67"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""MainClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bc4afd5-c5ab-4390-9770-8e06f9a5c9eb"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c134e410-06ae-4120-a136-abeca9af7e9c"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d076f1ee-562e-4beb-80c5-df076765b2eb"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a635002d-55a5-4202-9507-c1d63c1d4ac4"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0cf2e674-cd03-4841-9ec2-bf1615ef91dc"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouchPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd224b3e-3cc9-440a-9a13-4dfb19a74669"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondTouchPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fbac6f5-6dec-4549-968a-a5c8f16fac4a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouchDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93d24766-54ae-477f-9f0d-280ae4d713e8"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouchDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Default"",
            ""bindingGroup"": ""Default"",
            ""devices"": []
        }
    ]
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_MainClick = m_Gameplay.FindAction("MainClick", throwIfNotFound: true);
        m_Gameplay_PrimaryTouch = m_Gameplay.FindAction("PrimaryTouch", throwIfNotFound: true);
        m_Gameplay_SecondTouch = m_Gameplay.FindAction("SecondTouch", throwIfNotFound: true);
        m_Gameplay_MouseScroll = m_Gameplay.FindAction("MouseScroll", throwIfNotFound: true);
        m_Gameplay_PrimaryTouchPos = m_Gameplay.FindAction("PrimaryTouchPos", throwIfNotFound: true);
        m_Gameplay_SecondTouchPos = m_Gameplay.FindAction("SecondTouchPos", throwIfNotFound: true);
        m_Gameplay_PrimaryTouchDelta = m_Gameplay.FindAction("PrimaryTouchDelta", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_MainClick;
    private readonly InputAction m_Gameplay_PrimaryTouch;
    private readonly InputAction m_Gameplay_SecondTouch;
    private readonly InputAction m_Gameplay_MouseScroll;
    private readonly InputAction m_Gameplay_PrimaryTouchPos;
    private readonly InputAction m_Gameplay_SecondTouchPos;
    private readonly InputAction m_Gameplay_PrimaryTouchDelta;
    public struct GameplayActions
    {
        private @Controls m_Wrapper;
        public GameplayActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MainClick => m_Wrapper.m_Gameplay_MainClick;
        public InputAction @PrimaryTouch => m_Wrapper.m_Gameplay_PrimaryTouch;
        public InputAction @SecondTouch => m_Wrapper.m_Gameplay_SecondTouch;
        public InputAction @MouseScroll => m_Wrapper.m_Gameplay_MouseScroll;
        public InputAction @PrimaryTouchPos => m_Wrapper.m_Gameplay_PrimaryTouchPos;
        public InputAction @SecondTouchPos => m_Wrapper.m_Gameplay_SecondTouchPos;
        public InputAction @PrimaryTouchDelta => m_Wrapper.m_Gameplay_PrimaryTouchDelta;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @MainClick.started += instance.OnMainClick;
            @MainClick.performed += instance.OnMainClick;
            @MainClick.canceled += instance.OnMainClick;
            @PrimaryTouch.started += instance.OnPrimaryTouch;
            @PrimaryTouch.performed += instance.OnPrimaryTouch;
            @PrimaryTouch.canceled += instance.OnPrimaryTouch;
            @SecondTouch.started += instance.OnSecondTouch;
            @SecondTouch.performed += instance.OnSecondTouch;
            @SecondTouch.canceled += instance.OnSecondTouch;
            @MouseScroll.started += instance.OnMouseScroll;
            @MouseScroll.performed += instance.OnMouseScroll;
            @MouseScroll.canceled += instance.OnMouseScroll;
            @PrimaryTouchPos.started += instance.OnPrimaryTouchPos;
            @PrimaryTouchPos.performed += instance.OnPrimaryTouchPos;
            @PrimaryTouchPos.canceled += instance.OnPrimaryTouchPos;
            @SecondTouchPos.started += instance.OnSecondTouchPos;
            @SecondTouchPos.performed += instance.OnSecondTouchPos;
            @SecondTouchPos.canceled += instance.OnSecondTouchPos;
            @PrimaryTouchDelta.started += instance.OnPrimaryTouchDelta;
            @PrimaryTouchDelta.performed += instance.OnPrimaryTouchDelta;
            @PrimaryTouchDelta.canceled += instance.OnPrimaryTouchDelta;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @MainClick.started -= instance.OnMainClick;
            @MainClick.performed -= instance.OnMainClick;
            @MainClick.canceled -= instance.OnMainClick;
            @PrimaryTouch.started -= instance.OnPrimaryTouch;
            @PrimaryTouch.performed -= instance.OnPrimaryTouch;
            @PrimaryTouch.canceled -= instance.OnPrimaryTouch;
            @SecondTouch.started -= instance.OnSecondTouch;
            @SecondTouch.performed -= instance.OnSecondTouch;
            @SecondTouch.canceled -= instance.OnSecondTouch;
            @MouseScroll.started -= instance.OnMouseScroll;
            @MouseScroll.performed -= instance.OnMouseScroll;
            @MouseScroll.canceled -= instance.OnMouseScroll;
            @PrimaryTouchPos.started -= instance.OnPrimaryTouchPos;
            @PrimaryTouchPos.performed -= instance.OnPrimaryTouchPos;
            @PrimaryTouchPos.canceled -= instance.OnPrimaryTouchPos;
            @SecondTouchPos.started -= instance.OnSecondTouchPos;
            @SecondTouchPos.performed -= instance.OnSecondTouchPos;
            @SecondTouchPos.canceled -= instance.OnSecondTouchPos;
            @PrimaryTouchDelta.started -= instance.OnPrimaryTouchDelta;
            @PrimaryTouchDelta.performed -= instance.OnPrimaryTouchDelta;
            @PrimaryTouchDelta.canceled -= instance.OnPrimaryTouchDelta;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    private int m_DefaultSchemeIndex = -1;
    public InputControlScheme DefaultScheme
    {
        get
        {
            if (m_DefaultSchemeIndex == -1) m_DefaultSchemeIndex = asset.FindControlSchemeIndex("Default");
            return asset.controlSchemes[m_DefaultSchemeIndex];
        }
    }
    public interface IGameplayActions
    {
        void OnMainClick(InputAction.CallbackContext context);
        void OnPrimaryTouch(InputAction.CallbackContext context);
        void OnSecondTouch(InputAction.CallbackContext context);
        void OnMouseScroll(InputAction.CallbackContext context);
        void OnPrimaryTouchPos(InputAction.CallbackContext context);
        void OnSecondTouchPos(InputAction.CallbackContext context);
        void OnPrimaryTouchDelta(InputAction.CallbackContext context);
    }
}
